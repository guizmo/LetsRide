{"version":3,"sources":["../../src/pages/password-reset/password-reset.module.ts","../../src/validators/email.ts","../../src/pages/password-reset/password-reset.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACO;AACK;AACC;AActD;IAAA;IAAsC,CAAC;IAA1B,uBAAuB;QAZnC,+DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,0EAAiB;aAClB;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,0EAAiB,CAAC;gBAC3C,4EAAe,CAAC,QAAQ,EAAE;aAC3B;YACD,OAAO,EAAE;gBACP,0EAAiB;aAClB;SACF,CAAC;OACW,uBAAuB,CAAG;IAAD,8BAAC;CAAA;AAAH;;;;;;;;;ACfpC;AAAA;IAAA;IAaA,CAAC;IAXU,sBAAO,GAAd,UAAe,OAAoB;QAEjC,IAAI,EAAE,GAAG,wJAAwJ,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAEtL,EAAE,CAAC,CAAC,EAAE,CAAC,EAAC;YACN,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QAED,MAAM,CAAC,EAAC,cAAc,EAAE,IAAI,EAAC,CAAC;IAChC,CAAC;IAEL,qBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfyC;AACgC;AACN;AACZ;AAET;AAEc;AACN;AAGvD;;;;;GAKG;AAMH;IAGE,2BACS,OAAsB,EACtB,gBAAkC,EAClC,SAAoB,EACpB,YAA0B,EACzB,WAAwB,EACxB,SAA0B,EAC1B,aAA4B;QAN7B,YAAO,GAAP,OAAO,CAAe;QACtB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,cAAS,GAAT,SAAS,CAAW;QACpB,iBAAY,GAAZ,YAAY,CAAc;QACzB,gBAAW,GAAX,WAAW,CAAa;QACxB,cAAS,GAAT,SAAS,CAAiB;QAC1B,kBAAa,GAAb,aAAa,CAAe;QAEpC,IAAI,CAAC,iBAAiB,GAAG,WAAW,CAAC,KAAK,CAAC;YACzC,KAAK,EAAE,CAAC,EAAE,EAAE,0DAAU,CAAC,OAAO,CAAC,CAAC,0DAAU,CAAC,QAAQ,EAAE,yEAAc,CAAC,OAAO,CAAC,CAAC,CAAC;SAC/E,CAAC,CAAC;IAEL,CAAC;IAED,uCAAW,GAAX,UAAY,OAAe;QACzB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YAC3B,OAAO;YACP,mBAAmB,EAAE,IAAI;YACzB,eAAe,EAAE,IAAI;YACrB,eAAe,EAAE,IAAI;SACtB,CAAC;IACJ,CAAC;IAGD,yCAAa,GAAb;QAAA,iBAwBC;QAvBC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,EAAC;QACnC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,EAAC,aAAa,EAAC,IAAI,EAAC,EAAC,cAAc,EAAC,IAAI,EAAC,CAAC,CAAC;YAEvE,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,KAAK,CAAC;iBAClE,IAAI,CAAC,UAAC,IAAI;gBACT,KAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;gBAE1B,IAAI,KAAK,GAAG,KAAI,CAAC,WAAW,CAAC,kDAAkD,GAAG,KAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,KAAK,CAAC;gBACrH,KAAK,CAAC,OAAO,EAAE,CAAC;gBAEhB,KAAK,CAAC,YAAY,CAAC;oBACjB,KAAI,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;gBACrB,CAAC,CAAC,CAAC;YAGL,CAAC,EAAE,UAAC,KAAK;gBACP,KAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;gBAC1B,IAAI,YAAY,GAAW,KAAK,CAAC,OAAO,CAAC;gBACzC,KAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,OAAO,EAAE,CAAC;YAC3C,CAAC,CAAC,CAAC;QAEL,CAAC;IACH,CAAC;IApDU,iBAAiB;QAJ7B,gEAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;WACG;SACnC,CAAC;0FAK+B;YACJ,iEAAgB;YACvB,gEAAS;YACN,4DAAY;YACZ,sEAAW;YACb,qFAAe;YACX,aAAa;OAV3B,iBAAiB,CAsD7B;IAAD,CAAC;AAAA;SAtDY,iBAAiB,gB","file":"9.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { PasswordResetPage } from './password-reset';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  declarations: [\n    PasswordResetPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(PasswordResetPage),\n    TranslateModule.forChild()\n  ],\n  exports: [\n    PasswordResetPage\n  ]\n})\nexport class PasswordResetPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/password-reset/password-reset.module.ts","import {FormControl} from '@angular/forms';\r\n\r\nexport class EmailValidator {\r\n\r\n    static isValid(control: FormControl){\r\n\r\n      var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(control.value);\r\n\r\n      if (re){\r\n        return null;\r\n      }\r\n\r\n      return {\"invalidEmail\": true};\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/validators/email.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, ToastController } from 'ionic-angular';\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\nimport { EmailValidator } from '../../validators/email';\n\nimport { UserProvider } from '../../providers';\n\nimport { SpinnerDialog } from '@ionic-native/spinner-dialog';\nimport { TranslateService } from '@ngx-translate/core';\n\n\n/**\n * Generated class for the PasswordResetPage page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n@IonicPage({\n    defaultHistory: ['LoginPage']\n})\n@Component({\n  selector: 'page-password-reset',\n  templateUrl: 'password-reset.html',\n})\nexport class PasswordResetPage {\n  public resetPasswordForm:FormGroup;\n\n  constructor(\n    public navCtrl: NavController,\n    public translateService: TranslateService,\n    public navParams: NavParams,\n    public userProvider: UserProvider,\n    private formBuilder: FormBuilder,\n    private toastCtrl: ToastController,\n    private spinnerDialog: SpinnerDialog\n  ) {\n    this.resetPasswordForm = formBuilder.group({\n      email: ['', Validators.compose([Validators.required, EmailValidator.isValid])]\n    });\n\n  }\n\n  createToast(message: string) {\n    return this.toastCtrl.create({\n      message,\n      dismissOnPageChange: true,\n      closeButtonText: 'OK',\n      showCloseButton: true\n    })\n  }\n\n\n  resetPassword(){\n    if (!this.resetPasswordForm.valid){\n    } else {\n      this.spinnerDialog.show(null,'Waiting ...',true,{overlayOpacity:0.60});\n\n      this.userProvider.resetPassword(this.resetPasswordForm.value.email)\n      .then((user) => {\n        this.spinnerDialog.hide();\n\n        let toast = this.createToast('We just sent you a reset link to your email to: ' + this.resetPasswordForm.value.email)\n        toast.present();\n\n        toast.onDidDismiss(() => {\n          this.navCtrl.pop();\n        });\n\n\n      }, (error) => {\n        this.spinnerDialog.hide();\n        var errorMessage: string = error.message;\n        this.createToast(errorMessage).present();\n      });\n\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/password-reset/password-reset.ts"],"sourceRoot":""}